#!/bin/sh

#   updatefeatreg - updates all inverse transforms and gif images based
#                   on fundamental registration matrices:
#                   i.e. example_func2highres.mat , highres2standard.mat
#                 - this allows for manual/other correction of the matrices
#
#   Mark Jenkinson, FMRIB Image Analysis Group
#
#   Copyright (C) 1999-2004 University of Oxford
#
#   Part of FSL - FMRIB's Software Library
#   http://www.fmrib.ox.ac.uk/fsl
#   fsl@fmrib.ox.ac.uk
#   
#   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance
#   Imaging of the Brain), Department of Clinical Neurology, Oxford
#   University, Oxford, UK
#   
#   
#   LICENCE
#   
#   FMRIB Software Library, Release 3.3 (c) 2006, The University of
#   Oxford (the "Software")
#   
#   The Software remains the property of the University of Oxford ("the
#   University").
#   
#   The Software is distributed "AS IS" under this Licence solely for
#   non-commercial use in the hope that it will be useful, but in order
#   that the University as a charitable foundation protects its assets for
#   the benefit of its educational and research purposes, the University
#   makes clear that no condition is made or to be implied, nor is any
#   warranty given or to be implied, as to the accuracy of the Software,
#   or that it will be suitable for any particular purpose or for use
#   under any specific conditions. Furthermore, the University disclaims
#   all responsibility for the use which is made of the Software. It
#   further disclaims any liability for the outcomes arising from using
#   the Software.
#   
#   The Licensee agrees to indemnify the University and hold the
#   University harmless from and against any and all claims, damages and
#   liabilities asserted by third parties (including claims for
#   negligence) which arise directly or indirectly from the use of the
#   Software or the sale of any products based on the Software.
#   
#   No part of the Software may be reproduced, modified, transmitted or
#   transferred in any form or by any means, electronic or mechanical,
#   without the express permission of the University. The permission of
#   the University is not required if the said reproduction, modification,
#   transmission or transference is done without financial return, the
#   conditions of this Licence are imposed upon the receiver of the
#   product, and all original and amended source code is included in any
#   transmitted product. You may be held legally responsible for any
#   copyright infringement that is caused or encouraged by your failure to
#   abide by these terms and conditions.
#   
#   You are not permitted under this Licence to use this Software
#   commercially. Use for which any financial return is received shall be
#   defined as commercial use, and includes (1) integration of all or part
#   of the source code or the Software into a product for sale or license
#   by or on behalf of Licensee to third parties or (2) use of the
#   Software or any derivative of it for research with the final aim of
#   developing software products for sale or license to a third party or
#   (3) use of the Software or any derivative of it for research with the
#   final aim of developing non-software products for sale or license to a
#   third party, or (4) use of the Software to provide any service to an
#   external organisation for which payment is received. If you are
#   interested in using the Software commercially, please contact Isis
#   Innovation Limited ("Isis"), the technology transfer company of the
#   University, to negotiate a licence. Contact details are:
#   innovation@isis.ox.ac.uk quoting reference DE/1112.

dirnm=$1

if [ X${dirnm}X = XX ] ; then
  echo "Usage: $0 <feat_directory> [-pngs]"
  exit 1;
fi

if [ X${dirnm}X = X.X ] ; then
  dirnm=`pwd`;
fi

if [ ! -d $dirnm ] ; then
  echo "$dirnm is not a valid directory"
  echo "Usage: $0 <feat_directory> [-pngs]"
  exit -1
fi

if [ "X"`echo $dirnm | grep feat`"X" = "XX" ] ; then
  echo "Directory must be a feat directory"
  echo "Usage: $0 <feat_directory> [-pngs]"
  exit -2
fi

cd ${dirnm}/reg

init=no;
if [ -e initial_highres2highres.mat -o -e example_func2initial_highres.mat ] ; then
  init=yes;
fi

if [ $init = "yes" ] ; then
  if [ ! -f example_func2initial_highres.mat ] ; then
    echo "Could not find example_func2initial_highres.mat"
    exit -3 
  fi ;
  if [ ! -f initial_highres2highres.mat ] ; then
    echo "Could not find initial_highres2highres.mat"
    exit -3 
  fi ;
else 
  if [ ! -f example_func2highres.mat ] ; then
    echo "Could not find example_func2highres.mat"
    exit -3 
  fi ;
fi

if [ ! -f highres2standard.mat ] ; then
  echo "Could not find highres2standard.mat"
  exit -4 
fi

if [ $init = "yes" ] ; then
  # concatenate to make example_func2highres

  ${FSLDIR}/bin/convert_xfm -omat example_func2highres.mat -concat \
   initial_highres2highres.mat example_func2initial_highres.mat

  # make inverses

  ${FSLDIR}/bin/convert_xfm -inverse \
   -omat highres2initial_highres.mat initial_highres2highres.mat

  ${FSLDIR}/bin/convert_xfm -inverse \
   -omat initial_highres2example_func.mat example_func2initial_highres.mat

fi

# concatenate to make example_func2standard

${FSLDIR}/bin/convert_xfm -omat example_func2standard.mat -concat \
 highres2standard.mat example_func2highres.mat

# make inverses

${FSLDIR}/bin/convert_xfm -inverse \
 -omat standard2highres.mat highres2standard.mat

${FSLDIR}/bin/convert_xfm -inverse \
 -omat highres2example_func.mat example_func2highres.mat

${FSLDIR}/bin/convert_xfm -inverse \
 -omat standard2example_func.mat example_func2standard.mat


if [ X$2 != X-pngs ] ; then
    exit 0;
fi


sl=/tmp/slice_$PID

ef=example_func
ih=initial_highres
hr=highres
st=standard

ef2hr=example_func2highres
${FSLDIR}/bin/flirt -applyxfm -init $ef2hr.mat -in $ef -ref $hr -out $ef2hr
${FSLDIR}/bin/slicer $ef2hr $hr -s 0.5 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
${FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${ef2hr}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $ef2hr.*`

ef2st=example_func2standard
${FSLDIR}/bin/flirt -applyxfm -init $ef2st.mat -in $ef -ref $st -out $ef2st
${FSLDIR}/bin/slicer $ef2st $st -s 1 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
${FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${ef2st}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $ef2st.*`

hr2st=highres2standard
${FSLDIR}/bin/flirt -applyxfm -init $hr2st.mat -in $hr -ref $st -out $hr2st
${FSLDIR}/bin/slicer $hr2st $st -s 1 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
${FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${hr2st}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $hr2st.*`

if [ $init = "no" ] ; then
  exit 0;
fi

ef2ih=example_func2initial_highres
${FSLDIR}/bin/flirt -applyxfm -init $ef2ih.mat -in $ef -ref $ih -out $ef2ih
${FSLDIR}/bin/slicer $ef2ih $ih -s 1 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
${FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${ef2ih}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $ef2ih.*`

ih2hr=initial_highres2highres
${FSLDIR}/bin/flirt -applyxfm -init $ih2hr.mat -in $ih -ref $hr -out $ih2hr
${FSLDIR}/bin/slicer $ih2hr $hr -s 1 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
${FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${ih2hr}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $ih2hr.*`

ih2st=initial_highres2standard
${FSLDIR}/bin/flirt -applyxfm -init $ih2st.mat -in $ih -ref $st -out $ih2st
${FSLDIR}/bin/slicer $ih2st $st -s 1 -x 0.4 ${sl}a.png -x 0.5 ${sl}b.png -x 0.6 ${sl}c.png -y 0.4 ${sl}d.png -y 0.5 ${sl}e.png -y 0.6 ${sl}f.png -z 0.4 ${sl}g.png -z 0.5 ${sl}h.png -z 0.6 ${sl}i.png
{FSLDIR}/bin/pngappend ${sl}a.png + ${sl}b.png + ${sl}c.png + ${sl}d.png + ${sl}e.png + ${sl}f.png + ${sl}g.png + ${sl}h.png + ${sl}i.png ${ih2st}.png 
/bin/rm -f ${sl}*  `${FSLDIR}/bin/imglob $ih2st.*`
